[06 15:13:35 330@env.py:meghair.train.env] WRN --fast-run not enabled; execution may be slow
[06 15:13:35 67@popen_fork.py:megbrain] WRN It is dangerous to call fork() after cuda context has been initialized; please ensure no cuda methods is invoked in the child process. You can set MGB_THROW_ON_FORK to find out where the fork() is called.
[06 15:13:35 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:13:36 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:13:36 994@node.py:megskull.graph.node] WRN refcnt changed after coping opr conv1_1{Conv2D@0x7f349a5c5780}: 24 vs 20
[06 15:13:36 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv1_1{Concat@0x7f349a508f28})
[06 15:13:36 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_1: (32, 64, 224, 224)
[06 15:13:37 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:13:39 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:13:39 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5757 var(s) replaced; time=74.64ms
[06 15:13:39 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:13:39 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:13:39 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:13:39 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv1_2{Concat@0x7f349a481908})
[06 15:13:39 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 conv1_2: (32, 64, 224, 224)
[06 15:13:39 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:13:41 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:13:41 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5783 var(s) replaced; time=76.34ms
[06 15:13:41 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:13:41 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:13:41 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    784.00MiB( 822083584bytes)    784.00MiB(100.00%)    784.27MiB(100.04%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:13:41 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8397.50 gpu0:COPY=7809.50 gpu1:0=10547.50 gpu2:0=10547.50 gpu3:0=10547.50 gpu4:0=10547.50 gpu5:0=10547.50 gpu6:0=10547.50 gpu7:0=10547.50
[06 15:13:41 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    784.00MiB( 822083584bytes)    784.00MiB(100.00%)    784.27MiB(100.04%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:13:41 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=26.04msec(si3.31 mp+re7.10 omp0.03 alloc15.60)
[06 15:13:42 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:13:42 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    784.00MiB( 822083584bytes)    784.00MiB(100.00%)    784.27MiB(100.04%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:13:42 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7387.50 gpu0:COPY=6799.50 gpu1:0=10319.50 gpu2:0=10319.50 gpu3:0=10319.50 gpu4:0=10319.50 gpu5:0=10319.50 gpu6:0=10319.50 gpu7:0=10319.50
[06 15:13:42 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    784.00MiB( 822083584bytes)    784.00MiB(100.00%)    784.27MiB(100.04%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:13:42 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=130.44msec(si3.22 mp+re108.25 omp0.04 alloc18.93)
[06 15:21:44 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:21:44 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:21:44 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=pool1{Concat@0x7f3499270cf8})
[06 15:21:44 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 pool1: (32, 64, 112, 112)
[06 15:21:44 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:21:44 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:21:44 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5808 var(s) replaced; time=69.10ms
[06 15:21:44 1000@mgb.py:megbrain] opr seq of length 796: var_static=533 var_dynamic_shape=0 var_dynamic_storage=447 no_sys_alloc=0
[06 15:21:44 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:21:44 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:21:44 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv2_1{Concat@0x7f3499278128})
[06 15:21:45 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_1: (32, 128, 112, 112)
[06 15:21:45 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:21:45 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:21:45 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=72.09ms
[06 15:21:45 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:21:45 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:21:45 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:21:45 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8397.50 gpu0:COPY=8397.50 gpu1:0=10547.50 gpu2:0=10547.50 gpu3:0=10547.50 gpu4:0=10547.50 gpu5:0=10547.50 gpu6:0=10547.50 gpu7:0=10547.50
[06 15:21:45 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:21:45 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=22.61msec(si3.06 mp+re6.34 omp0.03 alloc13.18)
[06 15:21:46 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:21:46 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:21:46 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7989.50 gpu0:COPY=7793.50 gpu1:0=10307.50 gpu2:0=10295.50 gpu3:0=10295.50 gpu4:0=10295.50 gpu5:0=10295.50 gpu6:0=10295.50 gpu7:0=10295.50
[06 15:21:46 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:21:46 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=100.04msec(si3.05 mp+re80.94 omp0.04 alloc16.00)
[06 15:25:26 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:25:26 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:25:26 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv2_1{Concat@0x7f3499264a90})
[06 15:25:26 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_1: (32, 128, 112, 112)
[06 15:25:26 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:25:26 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:25:27 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=71.27ms
[06 15:25:27 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:25:27 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:25:27 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:25:27 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv2_2{Concat@0x7f349a410d68})
[06 15:25:27 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 conv2_2: (32, 128, 112, 112)
[06 15:25:27 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:25:27 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:25:27 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5794 var(s) replaced; time=71.20ms
[06 15:25:27 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:25:27 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:25:27 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:25:27 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7413.50 gpu0:COPY=7217.50 gpu1:0=10151.50 gpu2:0=10151.50 gpu3:0=10151.50 gpu4:0=10151.50 gpu5:0=10151.50 gpu6:0=10151.50 gpu7:0=10151.50
[06 15:25:27 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:25:27 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=24.15msec(si3.10 mp+re6.27 omp0.03 alloc14.75)
[06 15:25:28 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:25:28 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:25:28 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=6795.50 gpu0:COPY=6599.50 gpu1:0=9923.50 gpu2:0=9847.50 gpu3:0=9873.50 gpu4:0=9923.50 gpu5:0=9923.50 gpu6:0=9873.50 gpu7:0=9873.50
[06 15:25:28 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    392.00MiB( 411041792bytes)    392.00MiB(100.00%)    392.27MiB(100.07%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:25:28 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=109.50msec(si3.05 mp+re86.89 omp0.05 alloc19.52)
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:30:17 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=pool2{Concat@0x7f34990dda58})
[06 15:30:17 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 pool2: (32, 128, 56, 56)
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:30:17 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:30:17 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5808 var(s) replaced; time=74.03ms
[06 15:30:17 1000@mgb.py:megbrain] opr seq of length 796: var_static=533 var_dynamic_shape=0 var_dynamic_storage=447 no_sys_alloc=0
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:30:17 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv3_1{Concat@0x7f34990917f0})
[06 15:30:17 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_1: (32, 256, 56, 56)
[06 15:30:17 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:30:18 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:30:18 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=74.45ms
[06 15:30:18 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:30:18 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:30:18 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:30:18 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=6231.50 gpu0:COPY=6329.50 gpu1:0=9753.50 gpu2:0=9753.50 gpu3:0=9753.50 gpu4:0=9753.50 gpu5:0=9753.50 gpu6:0=9753.50 gpu7:0=9753.50
[06 15:30:18 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:30:18 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=27.30msec(si3.20 mp+re6.77 omp0.03 alloc17.31)
[06 15:30:18 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:30:18 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:30:18 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=5909.50 gpu0:COPY=5909.50 gpu1:0=9501.50 gpu2:0=9501.50 gpu3:0=9501.50 gpu4:0=9501.50 gpu5:0=9501.50 gpu6:0=9501.50 gpu7:0=9501.50
[06 15:30:18 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:30:18 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=95.01msec(si3.17 mp+re76.96 omp0.06 alloc14.83)
[06 15:33:47 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:33:48 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:33:48 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv3_1{Concat@0x7f347f8b7da0})
[06 15:33:48 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_1: (32, 256, 56, 56)
[06 15:33:48 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:33:48 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:33:48 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=75.45ms
[06 15:33:48 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:33:48 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:33:48 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:33:48 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv3_2{Concat@0x7f347f8a9748})
[06 15:33:48 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_2: (32, 256, 56, 56)
[06 15:33:48 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:33:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:33:49 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=71.07ms
[06 15:33:49 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:33:49 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:33:49 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:33:49 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=5541.50 gpu0:COPY=5541.50 gpu1:0=9357.50 gpu2:0=9357.50 gpu3:0=9357.50 gpu4:0=9357.50 gpu5:0=9357.50 gpu6:0=9357.50 gpu7:0=9357.50
[06 15:33:49 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:33:49 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=25.62msec(si3.27 mp+re6.12 omp0.03 alloc16.20)
[06 15:33:49 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:33:49 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:33:49 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=5119.50 gpu0:COPY=5119.50 gpu1:0=9103.50 gpu2:0=9103.50 gpu3:0=9103.50 gpu4:0=9103.50 gpu5:0=9103.50 gpu6:0=9103.50 gpu7:0=9103.50
[06 15:33:49 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:33:49 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=92.13msec(si3.14 mp+re73.29 omp0.03 alloc15.67)
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:39:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv3_2{Concat@0x7f347ef62390})
[06 15:39:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_2: (32, 256, 56, 56)
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:39:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:39:49 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=69.92ms
[06 15:39:49 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:39:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv3_3{Concat@0x7f347ee8b6a0})
[06 15:39:49 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 conv3_3: (32, 256, 56, 56)
[06 15:39:49 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:39:50 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:39:50 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5794 var(s) replaced; time=68.00ms
[06 15:39:50 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:39:50 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:39:50 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:39:50 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=4751.50 gpu0:COPY=4751.50 gpu1:0=8959.50 gpu2:0=8959.50 gpu3:0=8959.50 gpu4:0=8959.50 gpu5:0=8959.50 gpu6:0=8959.50 gpu7:0=8959.50
[06 15:39:50 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:39:50 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=26.31msec(si3.11 mp+re6.12 omp0.03 alloc17.04)
[06 15:39:50 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:39:50 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:39:50 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=4331.50 gpu0:COPY=4331.50 gpu1:0=8707.50 gpu2:0=8707.50 gpu3:0=8707.50 gpu4:0=8733.50 gpu5:0=8707.50 gpu6:0=8707.50 gpu7:0=8707.50
[06 15:39:50 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    196.27MiB(100.14%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:39:50 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=93.78msec(si3.07 mp+re75.46 omp0.04 alloc15.20)
[06 15:45:06 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:45:06 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:45:06 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=pool3{Concat@0x7f347e980c88})
[06 15:45:06 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 pool3: (32, 256, 28, 28)
[06 15:45:06 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:45:07 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:45:07 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5808 var(s) replaced; time=69.62ms
[06 15:45:07 1000@mgb.py:megbrain] opr seq of length 796: var_static=533 var_dynamic_shape=0 var_dynamic_storage=447 no_sys_alloc=0
[06 15:45:07 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:45:07 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:45:07 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv4_1{Concat@0x7f347e96d5f8})
[06 15:45:07 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_1: (32, 512, 28, 28)
[06 15:45:07 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:45:07 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:45:07 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=79.80ms
[06 15:45:07 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:45:07 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:45:07 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     49.00MiB(  51380224bytes)     49.00MiB(100.00%)     49.27MiB(100.56%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:45:07 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=3963.50 gpu0:COPY=4110.50 gpu1:0=8563.50 gpu2:0=8563.50 gpu3:0=8563.50 gpu4:0=8563.50 gpu5:0=8563.50 gpu6:0=8563.50 gpu7:0=8563.50
[06 15:45:07 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     49.00MiB(  51380224bytes)     49.00MiB(100.00%)     49.27MiB(100.56%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:45:07 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=27.86msec(si3.16 mp+re6.19 omp0.03 alloc18.47)
[06 15:45:08 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:45:08 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:45:08 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=3689.50 gpu0:COPY=3787.50 gpu1:0=8337.50 gpu2:0=8311.50 gpu3:0=8337.50 gpu4:0=8337.50 gpu5:0=8311.50 gpu6:0=8337.50 gpu7:0=8311.50
[06 15:45:08 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:45:08 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=116.23msec(si3.53 mp+re96.74 omp0.07 alloc15.90)
[06 15:52:01 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:52:02 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:52:02 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv4_1{Concat@0x7f347debfc50})
[06 15:52:02 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_1: (32, 512, 28, 28)
[06 15:52:02 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 15:52:03 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:52:03 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=74.55ms
[06 15:52:03 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:52:03 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 15:52:03 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 15:52:03 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv4_2{Concat@0x7f347ef5a828})
[06 15:52:04 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_2: (32, 512, 28, 28)
[06 15:52:04 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 15:52:04 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 15:52:04 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=73.62ms
[06 15:52:04 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 15:52:04 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:52:04 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:52:04 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8397.50 gpu0:COPY=8495.50 gpu1:0=10547.50 gpu2:0=10547.50 gpu3:0=10547.50 gpu4:0=10547.50 gpu5:0=10547.50 gpu6:0=10547.50 gpu7:0=10547.50
[06 15:52:04 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:52:04 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=24.60msec(si3.21 mp+re6.45 omp0.03 alloc14.91)
[06 15:52:04 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 15:52:04 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 15:52:04 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8075.50 gpu0:COPY=8173.50 gpu1:0=10321.50 gpu2:0=10321.50 gpu3:0=10295.50 gpu4:0=10321.50 gpu5:0=10321.50 gpu6:0=10321.50 gpu7:0=10321.50
[06 15:52:04 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 15:52:04 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=104.32msec(si3.24 mp+re81.98 omp0.04 alloc19.06)
[06 16:07:53 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 16:07:53 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 16:07:53 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv4_2{Concat@0x7f3499ade748})
[06 16:07:54 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_2: (32, 512, 28, 28)
[06 16:07:54 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 16:07:54 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 16:07:54 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=72.45ms
[06 16:07:54 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 16:07:54 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 16:07:54 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 16:07:54 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv4_3{Concat@0x7f34993b75f8})
[06 16:07:54 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 conv4_3: (32, 512, 28, 28)
[06 16:07:54 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 16:07:54 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 16:07:54 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5794 var(s) replaced; time=71.50ms
[06 16:07:54 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 16:07:54 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 16:07:54 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 16:07:54 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7805.50 gpu0:COPY=7903.50 gpu1:0=10151.50 gpu2:0=10151.50 gpu3:0=10151.50 gpu4:0=10151.50 gpu5:0=10151.50 gpu6:0=10151.50 gpu7:0=10151.50
[06 16:07:55 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 16:07:55 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=24.79msec(si3.27 mp+re6.48 omp0.04 alloc15.01)
[06 16:07:55 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 16:07:55 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 16:07:55 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7483.50 gpu0:COPY=7581.50 gpu1:0=9925.50 gpu2:0=9899.50 gpu3:0=9925.50 gpu4:0=9925.50 gpu5:0=9925.50 gpu6:0=9925.50 gpu7:0=9925.50
[06 16:07:55 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     98.00MiB( 102760448bytes)     98.00MiB(100.00%)     98.27MiB(100.28%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 16:07:55 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=95.45msec(si3.16 mp+re74.40 omp0.03 alloc17.85)
[06 16:25:30 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 16:25:30 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 16:25:30 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=pool4{Concat@0x7f347ef4eac8})
[06 16:25:30 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 pool4: (32, 512, 14, 14)
[06 16:25:30 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 16:25:31 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 16:25:31 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5808 var(s) replaced; time=74.78ms
[06 16:25:31 1000@mgb.py:megbrain] opr seq of length 796: var_static=533 var_dynamic_shape=0 var_dynamic_storage=447 no_sys_alloc=0
[06 16:25:31 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 16:25:31 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 16:25:31 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=conv5_1{Concat@0x7f349909a550})
[06 16:25:31 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_1: (32, 512, 14, 14)
[06 16:25:31 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349aef65c0})
[06 16:25:31 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 16:25:31 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5802 var(s) replaced; time=81.15ms
[06 16:25:31 1000@mgb.py:megbrain] opr seq of length 804: var_static=533 var_dynamic_shape=0 var_dynamic_storage=455 no_sys_alloc=0
[06 16:25:31 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 16:25:31 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     24.50MiB(  25690112bytes)     24.50MiB(100.00%)     24.77MiB(101.12%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 16:25:31 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=7213.50 gpu0:COPY=7385.00 gpu1:0=9755.50 gpu2:0=9755.50 gpu3:0=9755.50 gpu4:0=9755.50 gpu5:0=9755.50 gpu6:0=9755.50 gpu7:0=9755.50
[06 16:25:31 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     24.50MiB(  25690112bytes)     24.50MiB(100.00%)     24.77MiB(101.12%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 16:25:31 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=25.16msec(si3.23 mp+re6.52 omp0.04 alloc15.38)
[06 16:25:32 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 16:25:32 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
gpu0:COPY     24.50MiB(  25690112bytes)     24.50MiB(100.00%)     24.77MiB(101.12%)
   gpu1:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu2:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu3:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu4:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu5:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu6:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
   gpu7:0    196.00MiB( 205520896bytes)    196.00MiB(100.00%)    832.06MiB(424.52%)
[06 16:25:32 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=6963.50 gpu0:COPY=7135.00 gpu1:0=9529.50 gpu2:0=9503.50 gpu3:0=9529.50 gpu4:0=9529.50 gpu5:0=9529.50 gpu6:0=9503.50 gpu7:0=9503.50
[06 16:25:32 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
gpu0:COPY     24.50MiB(  25690112bytes)     24.50MiB(100.00%)     24.77MiB(101.12%)
   gpu1:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu2:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu3:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu4:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu5:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu6:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
   gpu7:0    196.25MiB( 205783040bytes)    196.25MiB(100.00%)    932.10MiB(474.95%)
[06 16:25:32 755@mgb.py:megbrain] static mem alloc: nr_opr=397 nr_var=533 realtime=108.54msec(si3.33 mp+re90.04 omp0.06 alloc15.11)
[06 16:41:08 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=data{DataProvider@0x7f349a5c59e8})
[06 16:41:08 272@fprop.py:megskull.graph.fprop] FpropEnv(val): var node shape:  data: (32, 3, 224, 224)
[06 16:41:08 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=prob_softmax{Concat@0x7f349a523278})
[06 16:41:09 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data@0: (4, 3, 224, 224)
 data@1: (4, 3, 224, 224)
 data@2: (4, 3, 224, 224)
 data@3: (4, 3, 224, 224)
 data@4: (4, 3, 224, 224)
 data@5: (4, 3, 224, 224)
 data@6: (4, 3, 224, 224)
 data@7: (4, 3, 224, 224)
 conv1_1@0: (4, 64, 224, 224)
 conv1_1@1: (4, 64, 224, 224)
 conv1_1@2: (4, 64, 224, 224)
 conv1_1@3: (4, 64, 224, 224)
 conv1_1@4: (4, 64, 224, 224)
 conv1_1@5: (4, 64, 224, 224)
 conv1_1@6: (4, 64, 224, 224)
 conv1_1@7: (4, 64, 224, 224)
 conv1_2@0: (4, 64, 224, 224)
 conv1_2@1: (4, 64, 224, 224)
 conv1_2@2: (4, 64, 224, 224)
 conv1_2@3: (4, 64, 224, 224)
 conv1_2@4: (4, 64, 224, 224)
 conv1_2@5: (4, 64, 224, 224)
 conv1_2@6: (4, 64, 224, 224)
 conv1_2@7: (4, 64, 224, 224)
 pool1@0: (4, 64, 112, 112)
 pool1@1: (4, 64, 112, 112)
 pool1@2: (4, 64, 112, 112)
 pool1@3: (4, 64, 112, 112)
 pool1@4: (4, 64, 112, 112)
 pool1@5: (4, 64, 112, 112)
 pool1@6: (4, 64, 112, 112)
 pool1@7: (4, 64, 112, 112)
 conv2_1@0: (4, 128, 112, 112)
 conv2_1@1: (4, 128, 112, 112)
 conv2_1@2: (4, 128, 112, 112)
 conv2_1@3: (4, 128, 112, 112)
 conv2_1@4: (4, 128, 112, 112)
 conv2_1@5: (4, 128, 112, 112)
 conv2_1@6: (4, 128, 112, 112)
 conv2_1@7: (4, 128, 112, 112)
 conv2_2@0: (4, 128, 112, 112)
 conv2_2@1: (4, 128, 112, 112)
 conv2_2@2: (4, 128, 112, 112)
 conv2_2@3: (4, 128, 112, 112)
 conv2_2@4: (4, 128, 112, 112)
 conv2_2@5: (4, 128, 112, 112)
 conv2_2@6: (4, 128, 112, 112)
 conv2_2@7: (4, 128, 112, 112)
 pool2@0: (4, 128, 56, 56)
 pool2@1: (4, 128, 56, 56)
 pool2@2: (4, 128, 56, 56)
 pool2@3: (4, 128, 56, 56)
 pool2@4: (4, 128, 56, 56)
 pool2@5: (4, 128, 56, 56)
 pool2@6: (4, 128, 56, 56)
 pool2@7: (4, 128, 56, 56)
 conv3_1@0: (4, 256, 56, 56)
 conv3_1@1: (4, 256, 56, 56)
 conv3_1@2: (4, 256, 56, 56)
 conv3_1@3: (4, 256, 56, 56)
 conv3_1@4: (4, 256, 56, 56)
 conv3_1@5: (4, 256, 56, 56)
 conv3_1@6: (4, 256, 56, 56)
 conv3_1@7: (4, 256, 56, 56)
 conv3_2@0: (4, 256, 56, 56)
 conv3_2@1: (4, 256, 56, 56)
 conv3_2@2: (4, 256, 56, 56)
 conv3_2@3: (4, 256, 56, 56)
 conv3_2@4: (4, 256, 56, 56)
 conv3_2@5: (4, 256, 56, 56)
 conv3_2@6: (4, 256, 56, 56)
 conv3_2@7: (4, 256, 56, 56)
 conv3_3@0: (4, 256, 56, 56)
 conv3_3@1: (4, 256, 56, 56)
 conv3_3@2: (4, 256, 56, 56)
 conv3_3@3: (4, 256, 56, 56)
 conv3_3@4: (4, 256, 56, 56)
 conv3_3@5: (4, 256, 56, 56)
 conv3_3@6: (4, 256, 56, 56)
 conv3_3@7: (4, 256, 56, 56)
 pool3@0: (4, 256, 28, 28)
 pool3@1: (4, 256, 28, 28)
 pool3@2: (4, 256, 28, 28)
 pool3@3: (4, 256, 28, 28)
 pool3@4: (4, 256, 28, 28)
 pool3@5: (4, 256, 28, 28)
 pool3@6: (4, 256, 28, 28)
 pool3@7: (4, 256, 28, 28)
 conv4_1@0: (4, 512, 28, 28)
 conv4_1@1: (4, 512, 28, 28)
 conv4_1@2: (4, 512, 28, 28)
 conv4_1@3: (4, 512, 28, 28)
 conv4_1@4: (4, 512, 28, 28)
 conv4_1@5: (4, 512, 28, 28)
 conv4_1@6: (4, 512, 28, 28)
 conv4_1@7: (4, 512, 28, 28)
 conv4_2@0: (4, 512, 28, 28)
 conv4_2@1: (4, 512, 28, 28)
 conv4_2@2: (4, 512, 28, 28)
 conv4_2@3: (4, 512, 28, 28)
 conv4_2@4: (4, 512, 28, 28)
 conv4_2@5: (4, 512, 28, 28)
 conv4_2@6: (4, 512, 28, 28)
 conv4_2@7: (4, 512, 28, 28)
 conv4_3@0: (4, 512, 28, 28)
 conv4_3@1: (4, 512, 28, 28)
 conv4_3@2: (4, 512, 28, 28)
 conv4_3@3: (4, 512, 28, 28)
 conv4_3@4: (4, 512, 28, 28)
 conv4_3@5: (4, 512, 28, 28)
 conv4_3@6: (4, 512, 28, 28)
 conv4_3@7: (4, 512, 28, 28)
 pool4@0: (4, 512, 14, 14)
 pool4@1: (4, 512, 14, 14)
 pool4@2: (4, 512, 14, 14)
 pool4@3: (4, 512, 14, 14)
 pool4@4: (4, 512, 14, 14)
 pool4@5: (4, 512, 14, 14)
 pool4@6: (4, 512, 14, 14)
 pool4@7: (4, 512, 14, 14)
 conv5_1@0: (4, 512, 14, 14)
 conv5_1@1: (4, 512, 14, 14)
 conv5_1@2: (4, 512, 14, 14)
 conv5_1@3: (4, 512, 14, 14)
 conv5_1@4: (4, 512, 14, 14)
 conv5_1@5: (4, 512, 14, 14)
 conv5_1@6: (4, 512, 14, 14)
 conv5_1@7: (4, 512, 14, 14)
 conv5_2@0: (4, 512, 14, 14)
 conv5_2@1: (4, 512, 14, 14)
 conv5_2@2: (4, 512, 14, 14)
 conv5_2@3: (4, 512, 14, 14)
 conv5_2@4: (4, 512, 14, 14)
 conv5_2@5: (4, 512, 14, 14)
 conv5_2@6: (4, 512, 14, 14)
 conv5_2@7: (4, 512, 14, 14)
 conv5_3@0: (4, 512, 14, 14)
 conv5_3@1: (4, 512, 14, 14)
 conv5_3@2: (4, 512, 14, 14)
 conv5_3@3: (4, 512, 14, 14)
 conv5_3@4: (4, 512, 14, 14)
 conv5_3@5: (4, 512, 14, 14)
 conv5_3@6: (4, 512, 14, 14)
 conv5_3@7: (4, 512, 14, 14)
 pool5@0: (4, 512, 7, 7)
 pool5@1: (4, 512, 7, 7)
 pool5@2: (4, 512, 7, 7)
 pool5@3: (4, 512, 7, 7)
 pool5@4: (4, 512, 7, 7)
 pool5@5: (4, 512, 7, 7)
 pool5@6: (4, 512, 7, 7)
 pool5@7: (4, 512, 7, 7)
 fc6@0: (4, 4096)
 fc6@1: (4, 4096)
 fc6@2: (4, 4096)
 fc6@3: (4, 4096)
 fc6@4: (4, 4096)
 fc6@5: (4, 4096)
 fc6@6: (4, 4096)
 fc6@7: (4, 4096)
 fc7@0: (4, 4096)
 fc7@1: (4, 4096)
 fc7@2: (4, 4096)
 fc7@3: (4, 4096)
 fc7@4: (4, 4096)
 fc7@5: (4, 4096)
 fc7@6: (4, 4096)
 fc7@7: (4, 4096)
 fc8@0: (4, 1000)
 fc8@1: (4, 1000)
 fc8@2: (4, 1000)
 fc8@3: (4, 1000)
 fc8@4: (4, 1000)
 fc8@5: (4, 1000)
 fc8@6: (4, 1000)
 fc8@7: (4, 1000)
 prob_softmax@0: (4, 1000)
 prob_softmax@1: (4, 1000)
 prob_softmax@2: (4, 1000)
 prob_softmax@3: (4, 1000)
 prob_softmax@4: (4, 1000)
 prob_softmax@5: (4, 1000)
 prob_softmax@6: (4, 1000)
 prob_softmax@7: (4, 1000)
 prob_softmax: (32, 1000)
[06 16:41:09 1000@mgb.py:megbrain] graph optimization: applied 8 passes, total 5805 var(s) replaced; time=72.19ms
[06 16:41:09 1000@mgb.py:megbrain] opr seq of length 794: var_static=531 var_dynamic_shape=0 var_dynamic_storage=447 no_sys_alloc=0
[06 16:41:09 825@mgb.py:megbrain] WRN extra kwargs provided for megbrain AsyncExec: {'data_parallel_sum_reduce_ratio@5', 'data_parallel_sum_reduce_ratio@4', 'data_parallel_sum_reduce_ratio@6', 'data_parallel_sum_reduce_ratio@7', 'data_parallel_sum_reduce_ratio@2', 'label', 'data', 'data_parallel_sum_reduce_ratio@3', 'data_parallel_sum_reduce_ratio@0', 'data_parallel_sum_reduce_ratio@1'}
[06 16:41:09 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    294.00MiB( 308281344bytes)    294.00MiB(100.00%)   1248.09MiB(424.52%)
gpu0:COPY      0.43MiB(    448512bytes)      0.43MiB(100.00%)      0.43MiB( 99.89%)
   gpu1:0    318.50MiB( 333971456bytes)    318.50MiB(100.00%)   1352.10MiB(424.52%)
   gpu2:0    318.50MiB( 333971456bytes)    318.50MiB(100.00%)   1352.10MiB(424.52%)
   gpu3:0    318.50MiB( 333971456bytes)    318.50MiB(100.00%)   1352.10MiB(424.52%)
   gpu4:0    318.50MiB( 333971456bytes)    318.50MiB(100.00%)   1352.10MiB(424.52%)
   gpu5:0    294.00MiB( 308281344bytes)    294.00MiB(100.00%)   1248.09MiB(424.52%)
   gpu6:0    294.00MiB( 308281344bytes)    294.00MiB(100.00%)   1248.09MiB(424.52%)
   gpu7:0    294.00MiB( 308281344bytes)    294.00MiB(100.00%)   1248.09MiB(424.52%)
[06 16:41:09 755@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=6667.50 gpu0:COPY=6961.07 gpu1:0=9237.00 gpu2:0=9237.00 gpu3:0=9237.00 gpu4:0=9237.00 gpu5:0=9261.50 gpu6:0=9261.50 gpu7:0=9261.50
[06 16:41:09 755@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    294.25MiB( 308543488bytes)    294.25MiB(100.00%)   1348.13MiB(458.16%)
gpu0:COPY      0.43MiB(    448512bytes)      0.43MiB(100.00%)      0.43MiB( 99.89%)
   gpu1:0    318.75MiB( 334233600bytes)    318.75MiB(100.00%)   1452.14MiB(455.57%)
   gpu2:0    318.75MiB( 334233600bytes)    318.75MiB(100.00%)   1452.14MiB(455.57%)
   gpu3:0    318.75MiB( 334233600bytes)    318.75MiB(100.00%)   1452.14MiB(455.57%)
   gpu4:0    318.75MiB( 334233600bytes)    318.75MiB(100.00%)   1452.14MiB(455.57%)
   gpu5:0    294.25MiB( 308543488bytes)    294.25MiB(100.00%)   1348.13MiB(458.16%)
   gpu6:0    294.25MiB( 308543488bytes)    294.25MiB(100.00%)   1348.13MiB(458.16%)
   gpu7:0    294.25MiB( 308543488bytes)    294.25MiB(100.00%)   1348.13MiB(458.16%)
[06 16:41:09 755@mgb.py:megbrain] static mem alloc: nr_opr=395 nr_var=531 realtime=46.15msec(si3.68 mp+re8.46 omp0.06 alloc33.96)
[06 16:43:53 0@(unknown file):megbrain] WRN cuda comp node method called after global finalize
[06 16:43:54 0@(unknown file):megbrain] WRN cpu comp node method called after global finalize: reason=free_host()
